// <auto-generated />
using System;
using Infrastructure.Data.Telegram;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Telegram.Migrations
{
    [DbContext(typeof(TelegramContext))]
    [Migration("20220920235808_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime2");

                    b.Property<int>("ProblemId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserCreateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProblemId");

                    b.HasIndex("UserCreateId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.Problem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("datetime2");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplited")
                        .HasColumnType("bit");

                    b.Property<byte>("Priority")
                        .HasColumnType("tinyint");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserCreateProblemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCreateProblemId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TelegramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.Answer", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Telegram.Problem", "Problem")
                        .WithMany("Answers")
                        .HasForeignKey("ProblemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApplicationCore.Entities.Telegram.User", "UserCreate")
                        .WithMany("Answers")
                        .HasForeignKey("UserCreateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Problem");

                    b.Navigation("UserCreate");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.Problem", b =>
                {
                    b.HasOne("ApplicationCore.Entities.Telegram.User", "UserCreateProblem")
                        .WithMany("Problems")
                        .HasForeignKey("UserCreateProblemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserCreateProblem");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.Problem", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("ApplicationCore.Entities.Telegram.User", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("Problems");
                });
#pragma warning restore 612, 618
        }
    }
}
